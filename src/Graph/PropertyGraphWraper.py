# This the the property graph format script for PandaDB-v0.3 test
# source node format: id(long)
# target neo4j node format: id_s(long), label(str), id_p(long),idStr(string),flag(bool)
# target neo4j edge format: fromId(long), type(str), toId(long), fromIn_p(long), toId_p(str), category(int)
# note: id_p means a property, whose name is id.
# note: str is generated by id, with the map(0>a, 1->b, ...... 9->j)
# note: flag = id%2, 0 for false, 1 for true;
# WARNING: the comma(,) is preserved split symbol!!! Don't use it in prop!!!

def id2str(id) -> str:
    idStr = ""
    while (id > 0):
        bit = id % 10
        idStr += chr(int(bit + 97))
        id = int(id / 10)
    return "".join(reversed(idStr))

def wrapNode(nodePath:str):
    with open(nodePath, mode="r", encoding='utf-8') as source:
        with open(nodePath+"-wrapped.csv", mode="w+", encoding='utf-8') as target:
            head = "id_s:ID,label:LABEL,id_p:long,idStr:string,flag:boolean\n"
            target.write(head)
            for item in source:
                id = int(item)
                id_s = id
                node_label = "label"+str(id%10)
                id_p = id
                idStr = id2str(int(id))
                flag = bool(id % 2)
                line = "{},{},{},\"{}\",{}\n".format(id_s, node_label, id_p, idStr, flag)
                target.write(line)

def wrapEdge(edgePath:str):
    with open(edgePath, mode='r', encoding='utf-8') as source:
        with open(edgePath+"-wrapped.csv", mode="w+", encoding='utf-8') as target:
            head = "fromId:START_ID,type:TYPE,toId:END_ID,fromId_num:long,toId_str,weight:int\n"
            target.write(head)
            # for i in range(100):
            for item in source:
                s_line = item.replace("\n", "").split("\t")
                # s_line = source.readline().replace("\n", "").split("\t")
                fromId = int(s_line[0])
                edgeType = "type" + str(fromId % 10)
                toId = int(s_line[1])
                fromId_p = fromId
                toId_p = str(toId)
                category = fromId%10
                line = "{},\"{}\",{},{},\"{}\",{}\n".format(fromId, edgeType, toId, fromId_p, toId_p, category)
                target.write(line)




edgePath = "D:\\dataset\\graph500-22"
nodePath = "D:\\dataset\\graph500-22_unique_node"


def main():
    print("wrapping nodes\n")
    wrapNode("D:\\dataset\\graph500-22_unique_node")
    with open(nodePath+"-wrapped.csv") as nodeFile:
        print("wrapped node file:\n")
        for i in range(10):
            print(nodeFile.readline())

    print("wrapping edges\n")
    wrapEdge("D:\\dataset\\graph500-22")
    with open(edgePath+"-wrapped.csv") as edgeFile:
        print("wrapped edge file:\n")
        for i in range(10):
            print(edgeFile.readline())

if __name__ == '__main__':
    main()